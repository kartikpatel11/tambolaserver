"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = require("../../type-util");
var error_util_1 = require("../../error-util");
/**
    If you pass in a bigint object created by
    a polyfill, it will never pass any `instanceof` checks,
    even though the polyfill could be done with an object.
*/
function instanceOf(ctor) {
    if (!type_util_1.allowsInstanceOf(ctor)) {
        throw new Error("instanceof check not allowed on " + type_util_1.getCtorName(ctor));
    }
    var ctorName = type_util_1.getCtorName(ctor);
    return function (name, mixed) {
        if (type_util_1.isInstanceOf(mixed, ctor)) {
            return mixed;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of " + ctorName + "; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: ctorName,
                expectedMeta: {
                    ctor: ctor,
                },
            });
        }
    };
}
exports.instanceOf = instanceOf;
//# sourceMappingURL=instance-of.js.map