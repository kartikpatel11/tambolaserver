"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var try_get_bigint_factory_function_1 = require("./try-get-bigint-factory-function");
var buffer_ctor_1 = require("./buffer-ctor");
function isBigIntNative(x) {
    return (typeof x == "bigint");
}
function isBigIntPolyfill(x) {
    if (typeof x == "bigint") {
        return true;
    }
    if (!(x instanceof Object)) {
        //It is a primitive type and not a bigint
        return false;
    }
    if ((x instanceof Number) ||
        (x instanceof String) ||
        buffer_ctor_1.isInstanceOfBuffer(x)) {
        //Sanity check.
        //These objects are most likely to pass the
        //numeric `.toString()` check below.
        return false;
    }
    if ((x instanceof Array) ||
        (x instanceof Date) ||
        (x instanceof Function)) {
        //Sanity check.
        //These objects are commonly used.
        return false;
    }
    var bigIntFactory = try_get_bigint_factory_function_1.tryGetBigIntFactoryFunction();
    if (bigIntFactory == undefined) {
        //No BigInt polyfill detected
        return false;
    }
    if (!bigIntFactory.possiblyInstanceOfBigInt(x)) {
        //Definitely not BigInt polyfilled object
        return false;
    }
    /*
        We now have,

        + An object
        + A BigInt factory
        + The object was possibly created by the BigInt factory
    */
    var xStr = String(x);
    if (!/^\-?\d+$/.test(xStr)) {
        //This object's string representation is not valid.
        return false;
    }
    //High confidence that this is a polyfilled BigInt object
    return true;
}
function isBigInt(x) {
    if (try_get_bigint_factory_function_1.isBigIntNativelySupported()) {
        return isBigIntNative(x);
    }
    else {
        return isBigIntPolyfill(x);
    }
}
exports.isBigInt = isBigInt;
//# sourceMappingURL=is-bigint.js.map