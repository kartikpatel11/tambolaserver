export interface AccessorDescriptor {
    configurable: boolean;
    enumerable: boolean;
    get: undefined | (() => any);
    set: undefined | ((v: any) => void);
}
export interface AccessorItem<T extends Object> {
    name: keyof T;
    descriptor: AccessorDescriptor;
}
export declare function isAccessorDescriptor(descriptor: PropertyDescriptor | null | undefined): descriptor is AccessorDescriptor;
export declare function getOwnAccessors<T extends Object>(obj: T): AccessorItem<T>[];
export declare function getAllAccessors<T extends Object>(obj: T): AccessorItem<T>[];
export declare function getAccessor(obj: Object, name: PropertyKey): AccessorDescriptor | undefined;
//# sourceMappingURL=index.d.ts.map