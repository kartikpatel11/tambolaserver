"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = require("../../mapper");
var operator_1 = require("../operator");
var implements_array_like_1 = require("./implements-array-like");
var string_util_1 = require("../../string-util");
function copyArrayLike(arr) {
    var result = [];
    for (var i = 0; i < arr.length; ++i) {
        result.push(arr[i]);
    }
    return result;
}
function arrayLike(f) {
    return mapper_1.copyRunTimeModifier(f, operator_1.pipe(implements_array_like_1.implementsArrayLike(), function (name, mixed) {
        var result = mixed;
        var isCopy = false;
        for (var i = 0; i < mixed.length; ++i) {
            /**
             * For now, fail quick for array-likes.
             *
             * @todo Should we accumulate errors like in `objectFromMap()`?
             * The array-like might be too large. How large is too large?
             * Should we accumulate the first `n` errors before throwing?
             */
            var cur = f("" + name + string_util_1.toPropertyAccess(i), mixed[i]);
            //We do not mind === here.
            //If either is a BigInt polyfill, we are okay with the copy.
            if (cur === mixed[i]) {
                continue;
            }
            if (!isCopy) {
                result = copyArrayLike(result);
                isCopy = true;
            }
            result[i] = cur;
        }
        return result;
    }));
}
exports.arrayLike = arrayLike;
//# sourceMappingURL=array-like.js.map