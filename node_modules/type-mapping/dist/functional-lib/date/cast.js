"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = require("../operator");
var string_1 = require("../string");
var instance_of_date_1 = require("./instance-of-date");
var number_1 = require("../number");
/**
    Unsafe because it just uses `new Date(str)`
    to convert to a `Date`.

    This may have surprising results.
    ```ts
    new Date("1").getTime() === 978325200000
    ```
*/
function unsafeStringToDate() {
    return operator_1.cast(string_1.string(), function (str) { return new Date(str); }, instance_of_date_1.instanceOfDate());
}
exports.unsafeStringToDate = unsafeStringToDate;
/**
    Feel free to specify your own `Date` parsing function,
    using any JS Date library you want.

    It is safe for `dateParser` to throw `Error`s.

    Do not use `Date.parse(str)` or `new Date(str)`
    as implementations vary wildly.

    If you wish to use either of those,
    use `unsafeStringToDate()` instead.
*/
function dateToString(dateParser) {
    return operator_1.cast(string_1.string(), function (str) { return dateParser(str); }, instance_of_date_1.instanceOfDate());
}
exports.dateToString = dateToString;
/**
 * Convert the number of seconds since the Unix Epoch to a `Date`.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function unixTimestampSecondsToDate() {
    return operator_1.cast(number_1.integer(), 
    //Multiply by 1000 because `Date` ctor expects
    //milliseconds since Unix Epoch
    function (num) { return new Date(num * 1000); }, instance_of_date_1.instanceOfDate());
}
exports.unixTimestampSecondsToDate = unixTimestampSecondsToDate;
/**
 * Convert the number of milliseconds since the Unix Epoch to a `Date`.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function unixTimestampMillisecondsToDate() {
    return operator_1.cast(number_1.integer(), function (num) { return new Date(num); }, instance_of_date_1.instanceOfDate());
}
exports.unixTimestampMillisecondsToDate = unixTimestampMillisecondsToDate;
/**
 * Convert a `Date` to the number of seconds since the Unix Epoch.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function dateToUnixTimestampSeconds() {
    return operator_1.cast(instance_of_date_1.instanceOfDate(), function (d) { return Math.floor(d.getTime() / 1000); }, number_1.integer());
}
exports.dateToUnixTimestampSeconds = dateToUnixTimestampSeconds;
/**
 * Convert a `Date` to the number of milliseconds since the Unix Epoch.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function dateToUnixTimestampMilliseconds() {
    return operator_1.cast(instance_of_date_1.instanceOfDate(), function (d) { return d.getTime(); }, number_1.integer());
}
exports.dateToUnixTimestampMilliseconds = dateToUnixTimestampMilliseconds;
//# sourceMappingURL=cast.js.map