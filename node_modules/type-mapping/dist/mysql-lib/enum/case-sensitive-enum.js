"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = require("../../fluent-lib");
/**
    TODO Handle case-insensitive enum collations

    -----

    https://dev.mysql.com/doc/refman/5.5/en/enum.html

    When retrieved, values stored into an ENUM column are displayed using the lettercase
    that was used in the column definition.

    Note that ENUM columns can be assigned a character set and collation.

    For binary or case-sensitive collations,
    lettercase is taken into account when assigning values to the column.
*/
function unsafeCaseSensitiveEnum() {
    var elements = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        elements[_i] = arguments[_i];
    }
    if (elements.length > 65535) {
        throw new Error("ENUM type can only have up to 65,535 elements");
    }
    return fluent_lib_1.unsafeLiteral.apply(void 0, elements);
}
exports.unsafeCaseSensitiveEnum = unsafeCaseSensitiveEnum;
/**
    TODO Handle case-insensitive enum collations

    -----

    https://dev.mysql.com/doc/refman/5.5/en/enum.html

    When retrieved, values stored into an ENUM column are displayed using the lettercase
    that was used in the column definition.

    Note that ENUM columns can be assigned a character set and collation.

    For binary or case-sensitive collations,
    lettercase is taken into account when assigning values to the column.
*/
function caseSensitiveEnum(element0) {
    var elements = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        elements[_i - 1] = arguments[_i];
    }
    return unsafeCaseSensitiveEnum.apply(void 0, [element0].concat(elements));
}
exports.caseSensitiveEnum = caseSensitiveEnum;
//# sourceMappingURL=case-sensitive-enum.js.map