"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = require("../operator");
var string_1 = require("./string");
var ip_v4_1 = require("./ip-v4");
var ip_v6_1 = require("./ip-v6");
var string_util_1 = require("../../string-util");
var error_util_1 = require("../../error-util");
function ipV4MappedIpV6String() {
    var ipV4StringDelegate = ip_v4_1.ipV4String();
    var ipV6PartDelegate = ip_v6_1.ipV6StringWithMaxSegmentCount(6);
    return operator_1.pipe(string_1.string(), function (name, str) {
        var ipV4Start = str.lastIndexOf(":");
        if (ipV4Start < 0) {
            throw error_util_1.makeMappingError({
                message: "Expected " + name + " to have ':' symbol",
                inputName: name,
                actualValue: str,
                expected: "IPv4-mapped IPv6 string with ':' symbol",
            });
        }
        var rawIpV4 = str.substr(ipV4Start + 1);
        //Must have [1, 6] segments
        //Note : If input ends with "::", rawIpV6 becomes ":"
        var rawIpV6 = str.substr(0, ipV4Start);
        if (rawIpV6.length == 0) {
            throw error_util_1.makeMappingError({
                message: "Expected " + name + " to have one to six IPv6 segments; found zero",
                inputName: name,
                actualValue: str,
                expected: "IPv4-mapped IPv6 string with one to six IPv6 segments",
            });
        }
        var rawIpV6EndsWithDoubleColon = string_util_1.stringEndsWith(rawIpV6, ":");
        var ipV4 = ipV4StringDelegate(name + ".IPv4Part", rawIpV4);
        var ipV6 = ipV6PartDelegate(name + ".IPv6Part", rawIpV6EndsWithDoubleColon ?
            rawIpV6 + ":" :
            rawIpV6);
        if (string_util_1.stringEndsWith(ipV6, "::")) {
            return ipV6 + ipV4;
        }
        else if (string_util_1.stringEndsWith(ipV6, ":")) {
            return ipV6 + ipV4;
        }
        else {
            return ipV6 + ":" + ipV4;
        }
    });
}
exports.ipV4MappedIpV6String = ipV4MappedIpV6String;
//# sourceMappingURL=ip-v4-mapped-ip-v6.js.map