import { AnyMapper } from "../mapper";
import { OutputOf, ExpectedInputOf, MappableInputOf, HandledInputOf } from "../query";
import { MappingError } from "../../mapping-error";
export declare type TryMapResult<T> = ({
    success: true;
    value: T;
} | {
    success: false;
    err: any;
    mappingError: MappingError;
});
/**
    Alias of `tryMapExpected<>()`
*/
export declare function tryMap<F extends AnyMapper>(f: F, name: string, mixed: ExpectedInputOf<F>): TryMapResult<OutputOf<F>>;
export declare function tryMapExpected<F extends AnyMapper>(f: F, name: string, mixed: ExpectedInputOf<F>): TryMapResult<OutputOf<F>>;
export declare function tryMapMappable<F extends AnyMapper>(f: F, name: string, mixed: MappableInputOf<F>): TryMapResult<OutputOf<F>>;
export declare function tryMapHandled<F extends AnyMapper>(f: F, name: string, mixed: HandledInputOf<F>): TryMapResult<OutputOf<F>>;
//# sourceMappingURL=try-map.d.ts.map