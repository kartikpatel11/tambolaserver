import { AsyncRequestVoidHandler, AsyncErrorVoidHandler, AsyncVoidHandler } from "./async-void-handler";
import { RouteData } from "../route";
import { RequestVoidHandler, ErrorVoidHandler } from "../void-handler";
export declare type RouteDataOf<HandlerT extends AsyncVoidHandler<RouteData>> = (HandlerT extends AsyncRequestVoidHandler<infer DataT> ? DataT : HandlerT extends AsyncErrorVoidHandler<infer DataT> ? DataT : never);
export declare function toSafeRequestVoidHandler<HandlerT extends AsyncRequestVoidHandler<any>>(handler: HandlerT): RequestVoidHandler<RouteDataOf<HandlerT>>;
export declare function toSafeErrorVoidHandler<HandlerT extends AsyncErrorVoidHandler<any>>(handler: HandlerT): ErrorVoidHandler<RouteDataOf<HandlerT>>;
//# sourceMappingURL=util.d.ts.map