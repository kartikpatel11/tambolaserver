import { MappingError } from "../mapping-error";
export interface MakeMappingErrorArgs {
    /**
     * The default message of the error
     */
    message: string;
    /**
     * The name of the input
     */
    inputName: string;
    /**
     * The actual value received
     */
    actualValue: unknown;
    /**
     * A description of what kind of value is expected
     *
     * In general, you should set this to be a `string`.
     */
    expected: string | undefined;
    expectedMeta?: {
        [k: string]: unknown;
        errorCode?: string;
        mappableValues?: unknown[];
        outputValues?: unknown[];
    };
    /**
     * In general, used by `object` or `array` mappers
     */
    propertyErrors?: MappingError[];
    /**
     * In general, used by mappers like `or()`.
     * Mappers that perform union operations.
     */
    unionErrors?: MappingError[];
    /**
     * In general, used by mappers like `deepMerge()`.
     * Mappers that perform intersection operations.
     */
    intersectionErrors?: MappingError[];
    /**
     * If set to a `string`, it will overwrite the stack of the result.
     */
    stack?: string;
}
export declare function makeMappingError(args: MakeMappingErrorArgs): MappingError;
//# sourceMappingURL=make-mapping-error.d.ts.map