import { SafeMapper, AnySafeMapper, OutputOf, ExpectedInput, ExpectedInputOf, MappableInput, MappableInputOf, ExtractRunTimeModifierOrUnknown } from "../../mapper";
export declare type CastDelegate<SrcT, DstT> = (src: SrcT) => DstT;
export declare type CastMapper<SrcF extends AnySafeMapper, DstF extends AnySafeMapper> = (SafeMapper<OutputOf<DstF>> & ExpectedInput<ExpectedInputOf<DstF>> & MappableInput<MappableInputOf<SrcF> | MappableInputOf<DstF>> & ExtractRunTimeModifierOrUnknown<SrcF>);
export declare function cast<SrcF extends AnySafeMapper, DstF extends AnySafeMapper>(srcMapper: SrcF, castDelegate: CastDelegate<OutputOf<SrcF>, MappableInputOf<DstF>>, dstMapper: DstF): (CastMapper<SrcF, DstF>);
//# sourceMappingURL=cast.d.ts.map