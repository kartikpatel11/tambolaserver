import { ExpectedInput } from "../../mapper";
import { MappableInput } from "../../mapper";
import { SafeMapper } from "../../mapper";
export declare function finiteNumberToFiniteNumberString(): import("../../mapper").Mapper<unknown, string> & ExpectedInput<string> & MappableInput<string | number>;
export declare function integerToIntegerString(): import("../../mapper").Mapper<unknown, string> & ExpectedInput<string> & MappableInput<string | number>;
export declare function unsignedIntegerToUnsignedIntegerString(): import("../../mapper").Mapper<unknown, string> & ExpectedInput<string> & MappableInput<string | number>;
/**
    Calls either `JSON.stringify()` or `JSON.parse()` once.
*/
export declare function jsonObjectToJsonObjectString(): (SafeMapper<string> & ExpectedInput<string> & MappableInput<string | {
    [k: string]: unknown;
}>);
//# sourceMappingURL=cast.d.ts.map