"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = require("../../type-util");
var operator_1 = require("../operator");
var literal_1 = require("../literal");
var undefined_1 = require("./undefined");
var string_1 = require("../string");
var error_util_1 = require("../../error-util");
function nullToUndefined() {
    return function (name, mixed) {
        //We do not mind === here.
        if (mixed === undefined || mixed === null) {
            return undefined;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be null|undefined; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "null|undefined",
            expectedMeta: {
                mappableValues: [null, undefined],
                outputValues: [undefined],
            },
        });
    };
}
exports.nullToUndefined = nullToUndefined;
function emptyStringToUndefined() {
    return operator_1.cast(literal_1.literal(""), function () { return undefined; }, undefined_1.undefined());
}
exports.emptyStringToUndefined = emptyStringToUndefined;
/**
    An empty string, or a string of only whitespace
*/
function whitespaceStringToUndefined() {
    return operator_1.cast(string_1.match(/^\s*$/, function (name) {
        return {
            message: name + " must be a whitespace string",
            expected: "whitespace string",
        };
    }), function () { return undefined; }, undefined_1.undefined());
}
exports.whitespaceStringToUndefined = whitespaceStringToUndefined;
//# sourceMappingURL=cast.js.map