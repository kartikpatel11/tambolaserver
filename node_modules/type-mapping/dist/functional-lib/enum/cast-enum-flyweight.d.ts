import { Enum, EnumKey } from "../../enum-util";
import { ToOneEnumValueMapper, ToOneEnumKeyMapper, ToEnumValueMapper, ToEnumKeyMapper } from "./cast";
export declare type CastEnumFlyweight<E extends typeof Enum> = ({
    toValue: (ToEnumValueMapper<E> & {
        [k in EnumKey<E>]: (ToOneEnumValueMapper<E, k>);
    });
    toKey: (ToEnumKeyMapper<E> & {
        [k in EnumKey<E>]: (ToOneEnumKeyMapper<E, k>);
    });
});
export declare function castEnumFlyweight<E extends typeof Enum>(e: E): (CastEnumFlyweight<E>);
//# sourceMappingURL=cast-enum-flyweight.d.ts.map