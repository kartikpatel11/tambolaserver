"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = require("../../mapper");
function pipeImpl() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot pipe zero mappers");
    }
    return mapper_1.copyRunTimeModifier(arr[0], function (name, mixed) {
        for (var i = 0; i < arr.length; ++i) {
            var d = arr[i];
            var elementResult = mapper_1.tryMapHandled(d, name, mixed);
            if (elementResult.success) {
                mixed = elementResult.value;
            }
            else {
                throw elementResult.mappingError;
            }
        }
        return mixed;
    });
}
//Not the best...
//export function pipe<ArrT extends AnyMapper[]> (...arr : ArrT) : SafeMapper<unknown>;
function pipe() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return pipeImpl.apply(void 0, arr);
}
exports.pipe = pipe;
function unsafePipe(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return pipeImpl.apply(void 0, [f].concat(arr));
}
exports.unsafePipe = unsafePipe;
function reallyUnsafePipe() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return pipeImpl.apply(void 0, arr);
}
exports.reallyUnsafePipe = reallyUnsafePipe;
//# sourceMappingURL=pipe.js.map