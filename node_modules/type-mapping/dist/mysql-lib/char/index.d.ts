import { FluentMapper } from "../../fluent-mapper";
export declare const char: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    maxLength: number;
};
export declare const varChar: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    maxLength: number;
};
export declare const tinyText: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    maxLength: number;
};
export declare const text: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    maxLength: number;
};
export declare const mediumText: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    maxLength: number;
};
export declare const longText: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, string>>;
    maxLength: number;
};
//# sourceMappingURL=index.d.ts.map