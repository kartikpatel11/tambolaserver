"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BigIntUtil = require("../bigint-util");
var ZeroEqualityAlgorithm;
(function (ZeroEqualityAlgorithm) {
    ZeroEqualityAlgorithm["NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL"] = "NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL";
    ZeroEqualityAlgorithm["NEGATIVE_AND_POSITIVE_ZERO_NOT_EQUAL"] = "NEGATIVE_AND_POSITIVE_ZERO_NOT_EQUAL";
})(ZeroEqualityAlgorithm = exports.ZeroEqualityAlgorithm || (exports.ZeroEqualityAlgorithm = {}));
function isEqual(a, b, zeroEqualityAlgorithm) {
    if (zeroEqualityAlgorithm == ZeroEqualityAlgorithm.NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL &&
        a.isZero &&
        b.isZero) {
        return true;
    }
    if (a.isInteger != b.isInteger) {
        return false;
    }
    if (a.isNegative != b.isNegative) {
        return false;
    }
    if (a.isZero != b.isZero) {
        return false;
    }
    if (!BigIntUtil.equal(a.fixedPointIntegerPartLength, b.fixedPointIntegerPartLength)) {
        return false;
    }
    if (!BigIntUtil.equal(a.fixedPointFractionalPartLength, b.fixedPointFractionalPartLength)) {
        return false;
    }
    if (!BigIntUtil.equal(a.fixedPointLength, b.fixedPointLength)) {
        return false;
    }
    return (a.getFixedPointString() ==
        b.getFixedPointString());
}
exports.isEqual = isEqual;
//# sourceMappingURL=is-equal.js.map