"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = require("../type-util");
var BigIntUtil = require("../bigint-util");
exports.floatingPointRegex = /^([-+])?([0-9]+\.?[0-9]*|[0-9]*\.?[0-9]+)([eE]([-+])?([0-9]+))?$/;
function tryParse(str) {
    var m = exports.floatingPointRegex.exec(str);
    if (m == undefined) {
        return undefined;
    }
    //-123.456e+789
    //~
    var rawCoefficientSign = m[1];
    //-123.456e+789
    // ~~~~~~~
    var rawCoefficientValue = m[2];
    //-123.456e+789
    //         ~
    var rawExponentSign = m[4];
    //-123.456e+789
    //          ~~~
    var rawExponentValue = m[5];
    var rawDecimalPlaceIndex = rawCoefficientValue.indexOf(".");
    var rawIntegerPart = (rawDecimalPlaceIndex < 0 ?
        rawCoefficientValue :
        rawCoefficientValue.substring(0, rawDecimalPlaceIndex));
    var rawFractionalPart = (rawDecimalPlaceIndex < 0 ?
        "" :
        rawCoefficientValue.substring(rawDecimalPlaceIndex + 1, rawCoefficientValue.length));
    var trimmedIntegerPart = rawIntegerPart.replace(/^(0+)/, "");
    var integerPart = (trimmedIntegerPart == "" ?
        "0" :
        trimmedIntegerPart);
    var trimmedFractionalPart = rawFractionalPart.replace(/(0+)$/, "");
    var fractionalPart = (trimmedFractionalPart == "" ?
        "0" :
        trimmedFractionalPart);
    var isZero = (integerPart == "0" && fractionalPart == "0");
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    var exponentValue = (isZero ?
        BigInt(0) :
        rawExponentValue == undefined ?
            BigInt(0) :
            BigIntUtil.mul(BigInt(rawExponentValue), BigInt((rawExponentSign === "-") ?
                -1 :
                1)));
    return {
        isNegative: (rawCoefficientSign === "-"),
        integerPart: integerPart,
        fractionalPart: fractionalPart,
        isZero: isZero,
        exponentValue: exponentValue,
    };
}
exports.tryParse = tryParse;
//# sourceMappingURL=try-parse.js.map