"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var m = require("../functional-lib");
var fluent_mapper_1 = require("../fluent-mapper");
function omit(obj) {
    var keys = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        keys[_i - 1] = arguments[_i];
    }
    var result = __assign({}, obj);
    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
        var k = keys_1[_a];
        delete result[k];
    }
    return result;
}
function toFluentExport(obj) {
    var result = {};
    var _loop_1 = function (k) {
        if (!obj.hasOwnProperty(k)) {
            return "continue";
        }
        result[k] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return fluent_mapper_1.fluentMapper(obj[k].apply(obj, args));
        };
    };
    for (var k in obj) {
        _loop_1(k);
    }
    return result;
}
//No need for omit<>() because `fluent-lib/index.ts`
//overwrites the generic functions with the ones
//in `fluent-lib/generic.ts`
var fluentExport = toFluentExport(omit(m, 
//Well, we need to omit this one because
//it doesn't return a SafeMapper<>
"castEnumFlyweight"));
module.exports = fluentExport;
//# sourceMappingURL=non-generic.js.map