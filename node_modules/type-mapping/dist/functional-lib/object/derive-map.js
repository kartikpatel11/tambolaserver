"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = require("../../mapper");
var operator_1 = require("../operator");
var derive_1 = require("./derive");
var to_empty_object_1 = require("./to-empty-object");
function deriveMap(map) {
    var arr = [];
    for (var k in map) {
        if (!map.hasOwnProperty(k)) {
            continue;
        }
        var f = map[k];
        arr.push(derive_1.derive(k, mapper_1.getNameOrEmptyString(f), f));
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    return operator_1.unsafeDeepMerge.apply(void 0, arr);
}
exports.deriveMap = deriveMap;
/*
import {string} from "../string";
import {withName, withExpectedInput} from "../../mapper";
import {unsignedInteger, stringToFiniteNumber} from "../number";
import {optional} from "../operator";

const m = renameMap({
    x : withName(string(), "y"),
    x2 : withName(unsignedInteger(), "y"),
    a : withExpectedInput(withName(stringToFiniteNumber(), "b"))<string>(),
    a2 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<string|number>(),
    a3 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<number>(),
    o : withExpectedInput(withName(optional(stringToFiniteNumber()), "_o"))<number>(),
});
m.__expectedInput
m.__mappableInput

const x = optional(withExpectedInput(withName(stringToFiniteNumber(), "_o"))<number>());

const m2 = renameMap({
    x : withName(string(), "y" as string),
    x2 : withName(unsignedInteger(), "y" as string),
    a : withExpectedInput(withName(stringToFiniteNumber(), "b"))<string>(),
    a2 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<string|number>(),
    a3 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<number>(),
    o : withExpectedInput(withName(optional(stringToFiniteNumber()), "_o"))<number>(),
    c2 : withExpectedInput(withName(stringToFiniteNumber(), "c2"))<string|number>(),
    c3 : withExpectedInput(withName(string(), "c2"))<string>(),
});
//*/ 
//# sourceMappingURL=derive-map.js.map