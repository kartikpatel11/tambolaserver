import { Mapper, HandledInputOf, OutputOf, ExtractExpectedInputOrUnknown, ExtractMappableInputOrUnknown, ExtendedMapper, ExtractRunTimeModifierOrUnknown } from "../../mapper";
export declare type CacheMapper<CachedT, F extends ExtendedMapper<any, any, [CachedT]>> = (
/**
 * This type,
 * ```ts
 * Extract<F, (name: string, mixed: any, ...args: any[]) => any>
 * ```
 *
 * is necessary because of this bug,
 * https://github.com/microsoft/TypeScript/pull/32924#issuecomment-521826091
 */
Mapper<HandledInputOf<Extract<F, (name: string, mixed: any, ...args: any[]) => any>>, OutputOf<Extract<F, (name: string, mixed: any, ...args: any[]) => any>>> & ExtractExpectedInputOrUnknown<Extract<F, (name: string, mixed: any, ...args: any[]) => any>> & ExtractMappableInputOrUnknown<Extract<F, (name: string, mixed: any, ...args: any[]) => any>> & ExtractRunTimeModifierOrUnknown<Extract<F, (name: string, mixed: any, ...args: any[]) => any>>);
export declare function cache<CachedT, F extends ExtendedMapper<any, any, [CachedT]>>(cached: CachedT, f: F): (CacheMapper<CachedT, F>);
//# sourceMappingURL=cache.d.ts.map