import { FluentMapper } from "../../fluent-mapper";
export declare const uint8ArrayBinary: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    maxLength: number;
};
export declare const uint8ArrayVarBinary: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    maxLength: number;
};
export declare const uint8ArrayTinyBlob: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    maxLength: number;
};
export declare const uint8ArrayBlob: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    maxLength: number;
};
export declare const uint8ArrayMediumBlob: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    maxLength: number;
};
export declare const uint8ArrayLongBlob: {
    (desiredLengthMin: number, desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (desiredLengthMax: number): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    (): FluentMapper<import("../../mapper").Mapper<unknown, Uint8Array>>;
    maxLength: number;
};
//# sourceMappingURL=index.d.ts.map