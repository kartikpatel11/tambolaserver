"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = require("../type-util");
function setter(f) {
    var result = function (target, propertyKey, descriptor) {
        var propertyName = (typeof propertyKey == "string") ?
            propertyKey :
            "Symbol(" + propertyKey.toString() + ")";
        var ctorName = type_util_1.getCtorName(target.constructor);
        var fullName = ctorName + "." + propertyName;
        var originalMethod = descriptor.set;
        descriptor.set = (function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            if (args.length == 0) {
                throw new Error("Cannot call " + fullName + ".set() with zero arguments");
            }
            for (var i = 0; i < args.length; ++i) {
                args[i] = f(fullName, args[i]);
            }
            if (originalMethod != undefined) {
                return originalMethod.apply(this, args);
            }
            else {
                return undefined;
            }
        });
    };
    return result;
}
exports.setter = setter;
/*
class Clazz {
    @setter(() => "1")
    set name (v : string) {
        console.log(v);
    }
}
//*/ 
//# sourceMappingURL=setter.js.map