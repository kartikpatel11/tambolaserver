import { AnySafeMapper, OutputOf } from "../mapper";
import { ExtractKeyOfType } from "./extract-key-of-type";
export declare type SetterDecorator<F extends AnySafeMapper> = (<ObjT, K extends keyof ObjT>(target: ObjT, propertyKey: (K extends ExtractKeyOfType<ObjT, OutputOf<F>> ? K : [K, "is of type", ObjT[K], "not exactly", OutputOf<F>]), descriptor: TypedPropertyDescriptor<ObjT[K]>) => void);
export declare function setter<F extends AnySafeMapper>(f: F): (SetterDecorator<F>);
//# sourceMappingURL=setter.d.ts.map