import { SafeMapperMap } from "./field-map";
import { WithName } from "../mapper";
/**
    https://github.com/microsoft/TypeScript/issues/31992#issuecomment-503816806
    We use this no-op `_` type as a hack to get the tooltip to give
    us a "better-looking" type
*/
declare type _<T> = T;
declare type OutputType<MapT extends SafeMapperMap, K extends keyof MapT = Extract<keyof MapT, string>> = (_<{
    [name in K]: (WithName<MapT[name], Extract<name, string>>);
}>);
/**
    Maps each `Mapper<>` to a `Field<>`
*/
export declare type ToFieldMap<MapT extends SafeMapperMap> = OutputType<MapT>;
/**
    Constructs multiple `Field<>` instances at once.
*/
export declare function fields<MapT extends SafeMapperMap>(map: MapT): (ToFieldMap<MapT>);
export {};
//# sourceMappingURL=ctor.d.ts.map