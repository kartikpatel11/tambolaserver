import { AnySafeMapper, OutputOf } from "../mapper";
import { ExtractKeyOfType } from "./extract-key-of-type";
export declare type PropDecorator<F extends AnySafeMapper> = (<ObjT, K extends keyof ObjT>(target: ObjT, propertyKey: (K extends ExtractKeyOfType<ObjT, OutputOf<F>> ? K : [K, "is of type", ObjT[K], "not exactly", OutputOf<F>]), __didYouMeanToUseSetterDecorator?: ["Did you mean to use @setter instead?"]) => void);
export declare function prop<F extends AnySafeMapper>(f: F): (PropDecorator<F>);
//# sourceMappingURL=prop.d.ts.map