export interface ParseResult {
    isInteger: boolean;
    isNegative: boolean;
    isZero: boolean;
    /**
     * Given `DECIMAL(precision, scale)`,
     * + precision = fixedPointFractionalLength + fixedPointIntegerLength
     * + scale     = fixedPointFractionalLength
     */
    fixedPointIntegerPartLength: bigint;
    fixedPointFractionalPartLength: bigint;
    /**
     * The length of the fixed-point string.
     */
    fixedPointLength: bigint;
    /**
     * These are methods because the string may be **very** long.
     * For example, expanding `1e999999999999999999999999999999`
     * into a fixed-point string
     * will probably just give you an out-of-memory exception.
     *
     * So, you should check the length of the string
     * before you get its string value!
     */
    getFixedPointIntegerPartString: () => string;
    getFixedPointFractionalPartString: () => string;
    getFixedPointString: () => string;
}
/**
 * @todo Make `getXxx()` functions cache results
 */
export declare function tryParse(str: string): undefined | ParseResult;
//# sourceMappingURL=try-parse.d.ts.map