"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = require("../operator");
var number_1 = require("../number");
var string_1 = require("./string");
var error_util_1 = require("../../error-util");
/**
    https://en.wikipedia.org/wiki/Dot-decimal_notation

    An octet is 8-bits.
    In decimal, an octet can represent [0, 255].

    IPv4 strings are made of four octets (written in decimal),
    each separated by a period.

    Examples:

    127.0.0.1
    255.255.255.0
    255.255.255.255
*/
function ipV4OctetString() {
    return operator_1.pipe(number_1.stringToUnsignedInteger(), number_1.ltEq(255), function (_name, octet) {
        return octet.toString();
    });
}
exports.ipV4OctetString = ipV4OctetString;
function ipV4String() {
    var octetDelegate = ipV4OctetString();
    return operator_1.pipe(string_1.string(), function (name, str) {
        var rawOctets = str
            .replace(/\s+/g, "")
            .split(".");
        if (rawOctets.length != 4) {
            throw error_util_1.makeMappingError({
                message: name + " must have four octets; found " + rawOctets.length,
                inputName: name,
                actualValue: str,
                expected: "four IPv4 octets",
            });
        }
        return rawOctets
            .map(function (rawOctet, i) { return octetDelegate(name + ".octet" + i, rawOctet); })
            .join(".");
    });
}
exports.ipV4String = ipV4String;
//# sourceMappingURL=ip-v4.js.map