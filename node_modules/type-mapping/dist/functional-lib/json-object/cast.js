"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = require("../../type-util");
var error_util_1 = require("../../error-util");
/**
    Calls `JSON.parse()` once, may call `JSON.stringify()` zero or one times.
*/
function stringToJsonObject() {
    return function (name, mixed) {
        if (typeof mixed != "string") {
            try {
                var str = JSON.stringify(mixed);
                if (typeof str == "string" && str[0] == "{") {
                    if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {
                        return JSON.parse(str);
                    }
                }
                throw error_util_1.makeMappingError({
                    message: name + " must be JSON Object; received " + type_util_1.toTypeStr(mixed),
                    inputName: name,
                    actualValue: mixed,
                    expected: "JSON Object",
                });
            }
            catch (err) {
                throw error_util_1.makeMappingError({
                    message: name + " must be JSON Object; " + err.message,
                    inputName: name,
                    actualValue: mixed,
                    expected: "JSON Object",
                });
            }
        }
        if (!/^\s*\{/.test(mixed)) {
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object string",
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object string",
            });
        }
        try {
            return JSON.parse(mixed);
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be valid JSON Object string; " + err.message,
                inputName: name,
                actualValue: mixed,
                expected: "valid JSON Object string",
            });
        }
    };
}
exports.stringToJsonObject = stringToJsonObject;
//# sourceMappingURL=cast.js.map