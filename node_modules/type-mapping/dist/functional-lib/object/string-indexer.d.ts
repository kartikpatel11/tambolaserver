import { AnySafeMapper, ExpectedInput, MappableInput, OutputOf, SafeMapper, ExtractRunTimeModifierOrUnknown, ExpectedInputOf, MappableInputOf } from "../../mapper";
/**
    This is unsafe because of the following example,

    ```ts
    const obj : { [k : string] : string } = {};
    //This compiles but is actually undefined.
    const str : string = obj.doesNotExist;
    ```
*/
export declare type UnsafeStringIndexerMapper<F extends AnySafeMapper> = (SafeMapper<{
    [k: string]: OutputOf<F>;
}> & ExpectedInput<{
    [k: string]: ExpectedInputOf<F>;
}> & MappableInput<{
    [k: string]: MappableInputOf<F>;
}> & ExtractRunTimeModifierOrUnknown<F>);
export declare function unsafeStringIndexer<F extends AnySafeMapper>(f: F): (UnsafeStringIndexerMapper<F>);
export declare type StringIndexerMapper<F extends AnySafeMapper> = (SafeMapper<{
    [k: string]: OutputOf<F> | undefined;
}> & ExpectedInput<{
    [k: string]: ExpectedInputOf<F> | undefined;
}> & MappableInput<{
    [k: string]: MappableInputOf<F> | undefined;
}> & ExtractRunTimeModifierOrUnknown<F>);
export declare function stringIndexer<F extends AnySafeMapper>(f: F): (StringIndexerMapper<F>);
//# sourceMappingURL=string-indexer.d.ts.map